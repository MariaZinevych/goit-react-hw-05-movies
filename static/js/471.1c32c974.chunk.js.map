{"version":3,"file":"static/js/471.1c32c974.chunk.js","mappings":"+SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAa,mCAAG,oGACJD,EAAAA,EAAAA,IAAA,qCAAwCD,IADpC,cACrBG,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAUbC,EAAiB,mCAAG,WAAMC,GAAN,uFACRN,EAAAA,EAAAA,IAAA,gBACZM,EADY,oBACOP,EADP,oBADQ,cACzBG,EADyB,yBAIxBA,EAASC,MAJe,2CAAH,sDAOjBI,EAAW,mCAAG,WAAMD,GAAN,uFACFN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeP,EADf,oBADE,cACnBG,EADmB,yBAIlBA,EAASC,KAAKK,MAJI,2CAAH,sDAOXC,EAAY,mCAAG,WAAMH,GAAN,uFACHN,EAAAA,EAAAA,IAAA,gBACZM,EADY,4BACeP,EADf,2BADG,cACpBG,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,sDAMZM,EAAoB,mCAAG,WAAMC,GAAN,uFACXX,EAAAA,EAAAA,IAAA,+BACGD,EADH,4DAC8DY,IAFnD,cAC5BT,EAD4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,qD,+FCgDjC,UA9EuB,WACrB,IAAQE,GAAYM,EAAAA,EAAAA,MAAZN,QACR,GAAkCO,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAkBA,IAhBAC,EAAAA,EAAAA,YAAU,WAEND,GAAW,IACXZ,EAAAA,EAAAA,IAAkBC,GACfa,MAAK,SAAAC,GACJL,EAAaK,EACd,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPR,GAAW,EACZ,GAGN,GAAE,CAACX,IACCQ,EAAL,CAIA,MAQIA,GAAa,CAAC,EAPhBY,EADF,EACEA,MACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,WACAC,EAJF,EAIEA,SACAC,EALF,EAKEA,OACAC,EANF,EAMEA,YACAC,EAPF,EAOEA,eAGF,OACE,iCACE,SAAC,KAAD,WACE,mBAAQC,KAAK,SAAb,SAAsB,cAEvBjB,IAAW,SAAC,IAAD,IACXF,IACC,4BACE,gBAAKoB,MAAM,QAAQC,IAAKJ,EAAaK,IAAKJ,KAC1C,4BACE,0BACGN,EAAM,KAAGC,EAAaU,MAAM,EAAG,GAAG,QAErC,yBAAG,eAAaT,MAChB,wBAAI,cACJ,uBAAIC,KACJ,wBAAI,YACJ,wBACGC,EAAOQ,KAAI,SAAAC,GAAK,OACf,wBAAoBA,EAAMC,MAAjBD,EAAME,GADA,aAOzB,mBACA,4BACE,wBAAI,4BACJ,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,SAAgB,YAElB,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,SAAmB,kBAGvB,mBACA,SAAC,KAAD,SAjDL,CAqDF,C","sources":["API.js","page/moviesDatalies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '7a1a96151b65b7a2369b7dfff5707ea0';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMoviesId = async () => {\n  const response = await axios.get(`movie/{movie_id}?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n","import { fetchMovieDetails } from 'API';\nimport Loader from 'components/loader';\nimport { useEffect, useState } from 'react';\nimport { Link, Outlet, useParams } from 'react-router-dom';\n\nconst MoviesDetalies = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const MoviesDetaliesfilms = () => {\n      setLoading(true);\n      fetchMovieDetails(movieId)\n        .then(detalies => {\n          setMovieInfo(detalies);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n    MoviesDetaliesfilms();\n  }, [movieId]);\n  if (!movieInfo) {\n    return;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = movieInfo || {};\n\n  return (\n    <>\n      <Link>\n        <button type=\"button\">Go back</button>\n      </Link>\n      {loading && <Loader />}\n      {movieInfo && (\n        <div>\n          <img width=\"300px\" src={poster_path} alt={original_title} />\n          <div>\n            <h1>\n              {title} ({release_date.slice(0, 4)})\n            </h1>\n            <p>User score: {popularity}</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <li>\n              {genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </li>\n          </div>\n        </div>\n      )}\n      <hr />\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <Link to=\"cast\">Cast</Link>\n          </li>\n          <li>\n            <Link to=\"reviews\">Reviews</Link>\n          </li>\n        </ul>\n        <hr />\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MoviesDetalies;\n"],"names":["API_KEY","axios","fetchTrending","response","data","results","fetchMovieDetails","movieId","fetchActors","cast","fetchReviews","fetchSearchByKeyword","keyword","useParams","useState","movieInfo","setMovieInfo","loading","setLoading","useEffect","then","detalies","catch","error","console","log","finally","title","release_date","popularity","overview","genres","poster_path","original_title","type","width","src","alt","slice","map","genre","name","id","to"],"sourceRoot":""}